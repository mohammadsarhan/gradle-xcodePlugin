import org.gradle.api.publish.maven.MavenPublication

buildscript {
	repositories {
		jcenter()
	}
}


def versionNumber = '0.9.14.a'

group = 'org.openbakery'
version = versionNumber


apply plugin: 'java'
apply plugin: 'groovy'
apply plugin: 'idea'
apply plugin: 'maven-publish'
apply plugin: 'maven'


sourceCompatibility = "1.6"
targetCompatibility = "1.6" 


dependencies {
	compile gradleApi()
	compile localGroovy()
}


repositories {
	mavenCentral()
}

dependencies {
	testCompile 'org.testng:testng:6.+'
	testCompile 'org.gmock:gmock:0.8.+'
	testCompile 'org.hamcrest:hamcrest-all:1.3'
	compile 'commons-io:commons-io:2.+'
	compile 'commons-configuration:commons-configuration:1.10+'
	compile 'commons-collections:commons-collections:3.2.+'
	compile 'org.apache.httpcomponents:httpclient:4.3+'
	compile 'org.apache.httpcomponents:httpmime:4.3+'
	compile 'org.pegdown:pegdown:1.4.+'
	compile 'ch.qos.logback:logback-core:1.1.+'

}

sourceSets.main.java.srcDirs = []
sourceSets.main.groovy.srcDirs += ["src/main/java"]


uploadArchives {
	repositories {
		mavenDeployer {
			repository(url: uri('../../repository'))
		}
	}
}

test {
	useTestNG()
}


task sourcesJar(type: Jar) {
    from sourceSets.main.allSource
    classifier = 'sources'
}



def pomConfig = {
	licenses {
		license {
    	name "The Apache Software License, Version 2.0"
      url "http://www.apache.org/licenses/LICENSE-2.0.txt"
      distribution "repo"
		}
	}
	developers {
  	developer {
			id "renep"
      name "Ren√© Pirringer"
      email "rene@openbakery.org"
		}
	}
}

publishing {
	publications {
  	mavenJava(MavenPublication) {
    	from components.java
      artifact sourcesJar

      pom.withXml {
      	def root = asNode()
        	root.appendNode('description', 'A gradle plugin for building Xcode projects')
          root.children().last() + pomConfig
			}
		}
	}
}
